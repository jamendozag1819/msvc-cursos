version: "3.9"
services:
  mysql8-cursos:
    container_name: mysql8-cursos
    image: mysql:8
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 100%Alexis
      MYSQL_DATABASE: cursos
    volumes:
      - data-cursos:/var/lib/mysql
    networks:
      - spring
    restart: always

  mysql8-usuarios:
    container_name: mysql8-usuarios
    image: mysql:8
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 100%Alexis
      MYSQL_DATABASE: usuarios
    volumes:
      - data-usuarios:/var/lib/mysql
    networks:
      - spring
    restart: always

  eureka-server:
    container_name: eureka-server
    image: jamg1819/eureka
#    build:
#      context: ./
#      dockerfile: ./eureka/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - spring
    restart:
      always
  msvc-usuarios:
    container_name: msvc-usuarios
    image: jamg1819/usuarios
    #    build:
    #      context: ./
    #      dockerfile: ./msvc-usuarios/Dockerfile
    ports:
      - "8001:8001"
    networks:
      - spring
    depends_on:
      - mysql8-usuarios
      - eureka-server
    restart:
      always
  msvc-cursos:
    container_name: msvc-cursos
    image: jamg1819/cursos
    #    build:
    #      context: ./
    #      dockerfile: ./msvc-cursos/Dockerfile
    ports:
      - "8002:8002"
    networks:
      - spring
    depends_on:
      - mysql8-cursos
      - eureka-server
      - msvc-usuarios
    restart:
      always
  gateway-server:
    container_name: gateway-server
    image: jamg1819/gateway
#    build:
#      context: ./
#      dockerfile: ./gateway-server/Dockerfile
    ports:
      - "8090:8090"
    networks:
      - spring
    depends_on:
      - msvc-usuarios
      - msvc-cursos
    restart:
      always
#Definiendo volumenes de usuarios y cursos
volumes:
  data-cursos:
    name: data-cursos
  data-usuarios:
    name: data-usuarios

#Definiendo redes
networks:
  spring:
    name: spring
